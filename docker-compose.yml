version: "3.9"
services:
  traefik:
    image: traefik:v3.1
    command:
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --certificatesresolvers.le.acme.email=${EMAIL}
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      - --accesslog=true
    ports: [ "80:80", "443:443" ]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/letsencrypt:/letsencrypt
    restart: unless-stopped

  db:
    image: postgres:16
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ${POSTGRES_DATA}:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    restart: unless-stopped

  meili:
    image: getmeili/meilisearch:v1.10
    environment: [ "MEILI_MASTER_KEY=${MEILI_MASTER_KEY}" ]
    volumes:
      - ${MEILI_DATA}:/meili_data
    labels:
      - traefik.enable=true
      - traefik.http.routers.meili.rule=Host(`${DOMAIN}`) && PathPrefix(`/meili`)
      - traefik.http.routers.meili.entrypoints=websecure
      - traefik.http.routers.meili.tls.certresolver=le
      - traefik.http.middlewares.meili-stripprefix.stripprefix.prefixes=/meili
      - traefik.http.routers.meili.middlewares=meili-stripprefix
      - traefik.http.services.meili.loadbalancer.server.port=7700
    restart: unless-stopped

  app:
    image: ghcr.io/ckemplen/mem-vault:latest
    env_file: .env
    depends_on: [db, redis, meili]
    labels:
      - traefik.enable=true
      - traefik.http.routers.vault.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.vault.entrypoints=websecure
      - traefik.http.routers.vault.tls.certresolver=le
      - traefik.http.services.vault.loadbalancer.server.port=8000
    restart: unless-stopped

  worker:
    image: ghcr.io/ckemplen/mem-vault:latest
    command: celery -A config worker -l INFO
    env_file: .env
    depends_on: [redis, db]
    restart: unless-stopped

  beat:
    image: ghcr.io/ckemplen/mem-vault:latest
    command: celery -A config beat -l INFO
    env_file: .env
    depends_on: [redis, db]
    restart: unless-stopped

volumes: {}
